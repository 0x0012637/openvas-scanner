/* OpenVAS
* $Id$
* Description: Provides general configuration settings.
*
* Authors: - Renaud Deraison <deraison@nessus.org> (Original pre-fork develoment)
*          - Tim Brown <mailto:timb@openvas.org> (Initial fork)
*          - Laban Mwangi <mailto:labanm@openvas.org> (Renaming work)
*          - Tarik El-Yassem <mailto:tarik@openvas.org> (Headers section)
*
* Copyright:
* Portions Copyright (C) 2006 Software in the Public Interest, Inc.
* Based on work Copyright (C) 1998 - 2006 Tenable Network Security, Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License version 2,
* as published by the Free Software Foundation
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
*
*
*/

 
/*
 * GENERAL CONFIGURATION
 */

/*
 * define this if you want to see some useful debug
 * messages comming from OpenVAS 
 */
#undef DEBUG

/* more paricular debuging flags */
#undef DEBUGMORE
#undef ENABLE_PID_STAMP_DEBUGGING

/*
 * OPENVASSD SPECIFIC CONFIGURATION
 */


/* miscellaneous */
#define OPENVASSD_LOGS     OPENVASSD_LOGDIR
#define OPENVASSD_LOGINS   OPENVASSD_STATEDIR "/users"
#define OPENVASSD_JOBS	OPENVASSD_STATEDIR  "/jobs"
#define OPENVASSD_CERTS	OPENVASSD_STATEDIR "/certs"

#define OPENVASSD_CA	OPENVASSD_SHAREDSTATEDIR "/CA"




/* derived entries */
#define OPENVASSD_CONF     OPENVASSD_CONFDIR  "/openvas/openvassd.conf"

#define OPENVASSD_MESSAGES OPENVASSD_LOGS "/openvassd.messages"
#define OPENVASSD_DEBUGMSG OPENVASSD_LOGS "/openvassd.dump"


#define OPENVASSD_DATAPOOL OPENVASSD_STATEDIR "-datapool"
#define OPENVASSD_RULES    OPENVASSD_DATADIR  "/openvassd.rules"


/* Definitions for client/scanner ecryption, activated on the C compiler
   command line as given by the command `openvas-config --cflags` */
#ifdef ENABLE_CRYPTO_LAYER

/* seconds the scanner waits for the client after authentication */
#define OPENVASSD_NEGOT_TIMEOUT 600 

/* the files, keys are stored in */
#define OPENVASSD_USERKEYS /* logindir */ "~/auth/openvassd.user-keys"
#define OPENVASSD_USERPWDS OPENVASSD_DATADIR "/openvassd.user-pwds"
#define OPENVASSD_KEYFILE  OPENVASSD_DATADIR "/openvassd.private-keys"

/* The default scanner key file and key length */
#define OPENVASSD_KEYLENGTH    1024
#define OPENVASSD_MAXPWDFAIL   5
#define OPENVASSD_USERNAME     "openvassd"

/* The default rpc cipher openvassd will be connect to (if any) */
#define OPENVASSD_RPCIPHER     "twofish/ripemd160"
#define OPENVASSD_RPCAUTH_METH  3 /* auth scheme, either 1 or 3 */

/* The timeout secs when waiting for a log pipe to be established */
#define OPENVASSD_LOGPIPE     OPENVASSD_DATADIR  "/openvassd.logpipe"
#define OPENVASSD_LOGPIPE_TMO 2

#endif /* ENABLE_CRYPTO_LAYER */

/* Obsolete: the port 3001 on which openvassd will be listening */
#undef DEFAULT_PORT

/* The default port assigned to OpenVAS for OTP by the iana is 9390, see
   http://www.iana.org/assignments/port-numbers */
#define OPENVAS_IANA_OTP_PORT 9390

/* The max number of client connections/sec */
#define OPENVASSD_CONNECT_RATE 4

/* Block this many secs if the OPENVASSD_CONNECT_RATE was exceeded */
#define OPENVASSD_CONNECT_BLOCKER 2

/*
 * How much time before closing
 * the connection if nothing comes
 * from the client ? (in secs)
 */
#define CLIENT_TIMEOUT 300

/*
 * How much time before killing
 * a plugin ? (in secs)
 * (if you have a slow computer or a slow
 * network connection, set it to 320 or more)
 */
 
#define PLUGIN_TIMEOUT 320


/* 
 * Should we use applications for the remote harg stuff ?
 */
#ifdef ENABLE_RHLST
#undef ENABLE_RHLST_APPS
#endif

/*
 * Shall the scanner log EVERYTHING ?
 */
#undef LOGMORE

/*
 * Shall the scannerlog the whole attack ?
 */
#undef LOG_WHOLE_ATTACK

/*
 * Host specs.
 * 
 * Set this if you are running OpenBSD < 2.1 or all FreeBSD or
 * all netBSD, or BSDi < 3.0
 *
 * If you have run this script as root, then it should be correctly
 * set up
 *
 */
#undef BSD_BYTE_ORDERING


/*
 * Set by AC_SYS_LARGEFILE, needed for gpgme key retrieval
 */
#undef _FILE_OFFSET_BITS

/*
 * STOP ! Don't edit anything after this line !
 */
#ifndef _CYGWIN_
#undef _CYGWIN_
#endif

#undef STDC_HEADERS
#undef HAVE_GMP_H
#undef HAVE_GMP2_GMP_H
#undef HAVE_UNISTD_H
#undef HAVE_ASSERT_H
#undef HAVE_FNMATCH
#undef HAVE_LSTAT
#undef HAVE_MMAP
#undef HAVE_ATEXIT
#undef HAVE_BZERO
#undef HAVE_BCOPY
#undef HAVE_RAND
#undef HAVE_POLL
#undef HAVE_RINT
#undef HAVE_SELECT
#undef HAVE_SETSID
#undef HAVE_WAITPID
#undef HAVE_WAIT3
#undef HAVE_WAIT4
#undef HAVE_POLL_H
#undef HAVE_GETTIMEOFDAY
#undef GETTIMEOFDAY_ONE_ARGUMENT
#undef HAVE_TIMEVAL
#undef HAVE_GETHRTIME
#undef HAVE_GETRUSAGE
#undef HAVE_LONG_FILE_NAMES
#undef HAVE_STRING_H
#undef HAVE_STRINGS_H
#undef HAVE_SYS_POLL_H
#undef HAVE_SYS_SOCKIO_H
#undef HAVE_SYS_SOCKETIO_H
#undef HAVE_SYS_SOCKET_H
#undef HAVE_SYS_PARAM_H
#undef HAVE_NETDB_H
#undef HAVE_ARPA_INET_H
#undef HAVE_NETINET_TCP_H
#undef HAVE_NET_IF_H
#undef HAVE_NETINET_TCPIP_H
#undef HAVE_NETINET_IN_H
#undef HAVE_NETINET_IN_SYSTM_H
#undef HAVE_NETINET_IP_UDP_H
#undef HAVE_NETINET_UDP_H
#undef HAVE_NETINET_PROTOCOLS_H
#undef HAVE_NETINET_IP_H
#undef HAVE_NETINET_IP_ICMP_H
#undef HAVE_NETINET_IP_TCP_H
#undef HAVE_NETINET_PROTOCOLS_H
#undef HAVE_DL_LIB
#undef HAVE_SHL_LOAD
#undef HAVE_NSCREATEOBJECTFILEIMAGEFROMFILE
#undef HAVE_VSNPRINTF
#undef HAVE_MKSTEMP
#undef HAVE_SETJMP_H
#undef HAVE_STRUCT_IP
#undef HAVE_STRUCT_ICMP
#undef HAVE_STRUCT_TCPHDR
#undef HAVE_TCPHDR_TH_OFF
#undef HAVE_TCPHDR_TH_X2_OFF
#undef HAVE_STRUCT_UDPHDR
#undef HAVE_BSD_STRUCT_UDPHDR
#undef HAVE_ICMP_ICMP_LIFETIME
#undef HAVE_SYS_WAIT_H
#undef HAVE_SYS_STAT_H
#undef HAVE_LIMITS_H
#undef HAVE_VALUES_H
#undef HAVE_STAT_H
#undef TIME_WITH_SYS_TIME
#undef HAVE_SYS_TIME_H
#undef HAVE_SYS_IOCTL_H
#undef HAVE_DIRENT_H
#undef HAVE_SYS_NDIR_H
#undef HAVE_SYS_DIR_H
#undef HAVE_NDIR_H
#undef HAVE_DL_H
#undef HAVE_STRCHR
#undef HAVE_MEMCPY
#undef HAVE_MEMMOVE
#undef HAVE_ALLOCA
#undef HAVE_ALLOCA_H
#undef HAVE_PTHREAD_H
#undef HAVE_PTHREAD_CANCEL
#undef HAVE_DLFCN_H
#undef HAVE_FCNTL_H
#undef HAVE_RPC_RPC_H
#undef WORDS_BIGENDIAN
#undef SIZEOF_UNSIGNED_INT
#undef SIZEOF_UNSIGNED_LONG
#undef HAVE_MEMORY_H
#undef HAVE_ADDR2ASCII
#undef HAVE_INET_NETA
#undef HAVE_SYS_UN_H
#undef HAVE_CTYPE_H
#undef HAVE_SYS_TYPES_H
#undef HAVE_ERRNO_H
#undef HAVE_PWD_H
#undef HAVE_STDLIB_H
#undef HAVE_STDIO_H
#undef HAVE_SYS_FILIO_H
#undef HAVE_SYS_RESOURCE_H
#undef HAVE_XDR_MON
#undef HAVE_SOCKADDR_SA_LEN
#undef HAVE_SGTTY_H
#undef HAVE_TERMIO_H
#undef HAVE_TERMIOS_H
#undef HAVE_LIBUTIL_H
#undef HAVE_DB1_DB_H
#undef HAVE_DB_H
#undef HAVE_SETPROCTITLE
#undef HAVE__EXIT

#undef HAVE_PTY_H
#undef HAVE_SYS_MMAN_H
#undef HAVE_SIGNAL_H
#undef HAVE_PWD_H
#undef HAVE_SETJMP_H
#undef LINUX
#undef FREEBSD
#undef OPENBSD
#undef SOLARIS
#undef SUNOS
#undef BSDI
#undef IRIX
#undef NETBSD


#undef HAVE_INET_ATON
#undef STUPID_SOLARIS_CHECKSUM_BUG
#undef HAVE_STRUCT_IP_CSUM
#undef HAVE_GETHOSTBYNAME_R
#undef HAVE_SOLARIS_GETHOSTBYNAME_R
#undef HAVE_SOLARIS_GETHOSTBYADDR_R
#undef HAVE_SIGNAL_SA_RESTORER
#undef USE_SYSLOG
#undef USE_ZLIB_COMPRESSION


#undef GTK_VERSION
#undef BROKEN_PTHREAD_CLEANUP_PUSH

#undef HAVE_REGEX_SUPPORT
/*
 * Experimental features 
 */
#define ENABLE_SAVE_TESTS 1
/* 
 * Local Variables:
 * mode: c
 * Emd:
 */
